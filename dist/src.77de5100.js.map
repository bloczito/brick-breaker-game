{"version":3,"sources":["view/CanvasView.ts","sprites/Ball.ts","sprites/Paddle.ts","Collision.ts","setup.ts","sprites/Brick.ts","helpers.ts","index.ts"],"names":[],"mappings":";;AOAA;;AACA;;AAEA;AJAA,AGHA,AFAA,AHEA,AIAA,AHAA,AFGA,IGFA,AFDA,AIAA,AHAA,AFGA,ICHA,CIAA,CHAA,GCCA,CHEA;AGFA,AICA,ANFA,AIAA,AHAA,AFGA;AGFA,AGDA,AFDA,AHCA,AIAA,AHAA,AFGA,YGFA,AFDA,AIAA,AHAA,AFGA;AGFA,AIGA,ANCI,AIFA,AHIA,AFIA,WGVJ,AFII,AIFA,AHIA,AFIA,ICNA,CACY,AIHZ,CACY,AHGZ,CACY,ECPhB,CHUI,CAAY,CGVhB,CAsDC,AFlDG,ACEA,EDAY,ACEA,CGNZ,EAEY,GHEZ,AFIA,ECNA,ACKY,AFCkB,ECH1B,IILJ,CJEA,ACEA,CGDY,CJGR,ACEQ,KDNZ,EAIiB,AINjB,EAIY,AHAZ,EAKI,KALJ,EAKiB,EGTjB,EAKI,KALJ,EAKiB;ADRrB,AHMgB,AIFA,AHGZ,AFKI,QELJ,CDDY,AIFA,ALQH,IELT,EFKI,CELJ,CDDY,CDMM,CKRN,CJEA,ACCZ,EGHY,ILQc,CAAC,CCNf,IIFA,QLQM,CAAuB,UAAvB,CAAd;AGVJ,AIGJ,ANEgB,AIFA,ALQR,EGXJ,OFKY,AIFA,ALQH,EGXT,CAAA,IHWI,CCNQ,EDMO,CCNP,AIFA,CFHZ,CAAA,CEGY,CLQY,ICNZ,EDMO,CAAY,GKRnB,MFHZ,CHWmB,CAAuB,CGX1C,GHWmB,CAAf,MGXe,IAAnB,EAA+B,OAA/B,EAAgD,IAAhD,EAAgE;AAC5D,ACFR,AHEY,AIGI,AHEA,AFMR,SCXI,AIGI,AHEA,AFMH,MENG,EGFA,CJHJ,ACKI,EGFA,CJH0B,ADWlC,GENQ,AFMY,CCXkB,GIG9B,EJH0B,EAA9B,ADWwB,CAAC,aAAT,CAAuB,QAAvB,CAApB;AGVA,AIGR,ANIQ,AIJQ,AHEA,AFMR,QGVI,CFMC,AIJG,AHEA,AFMH,GGVG,CAAC,CHUT,CENQ,CCJJ,CAAS,AFMb,ADIa,CGVT,ADII,EDEQ,AIJR,CFFS,EEET,CHEA,CCJa,AHUA,CGVC,AHUA,ECJtB,GENI,GAA0B,AEEtB,KLQK,CAAuB,CGVC,CAAC,GAAR,CAAY,CAAtC,CHUS,CAAb,EGTI,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,OAAO,CAAC,GAAR,CAAY,CAAZ,GAAgB,OAAO,CAAC,KADrC,IAEA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,MAAlB,KAA6B,OAAO,CAAC,GAAR,CAAY,CAH7C,EAIE;AACE,ACPZ,AHUQ,AIXI,AHSI,AFMR,MGPI,GFGC,AIXD,AHSI,AFMH,CGPG,CAAC,EHOT,GENQ,AFMI,CCJZ,EIXI,AHSI,CDEQ,EIXmB,ELef,CAAC,CKfkB,AHS/B,CCDJ,CFGJ,GIXmC,EAA/B,KLeQ,CAAuB,OAAvB,CAAZ;AGNC,AIQT,ANLQ,AIHA,AHCQ,AFMX,KGf+D,CAU5D,GFCK,AIHA,AHCG,KDER,GAAa,CCFL,CGDR,EHCQ,CGDU,QHCV,EGDR;AJII,AIHJ,AHTI,MDYA,CAAC,EAAE,AIHF,AHTD,KDWS,CCXT,GAA2B,EGS/B,EHTmC,CGShB,IHTY,EAA3B,KGSJ;AJII,AIHJ,ALOJ,EAAA,ICJQ,CAAC,EAAE,AIHF,CJGG,EDIZ,CAAA,IKPI,GAAgB,ELOpB,CAAA,KKPI,ALOJ,GAAA,YAAA;AGNI,ACTR,AHSqB,AIAb,AHaJ,KDbI,GEAI,CEAC,AHaT,GCbY,CAAC,GAAL,CAAS,CAAT,EEAJ,CFAiB,CDarB,CGbuB,EFAE,ADaT,CCbU,MAAL,CAAY,CEA7B,CHaa,CAAD,ECbK,ADaY,GCbQ,IAAI,CAAC,KAAtC,IAA+C,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,CAAhE,EAAmE;AAC/D,AIMZ,AHfA,AHYQ,AIHA,AHaA,IKPJ,EJNQ,GFGC,AIHA,CFAG,ADaJ,CCbK,ADaJ,CKPD,ALOE,GKPC,CLOH,EDVJ,CAAe,AIHf,CEMR,AFNwB,CHaF,CDVd,CIHA,EJGqB,CIHC,CFAlB,GFGJ,CIHA,CHaI,IAAyB,CAAC,CAAC,GAAF,KAAU,WAAvC,EAAoD,KAAI,CAAC,SAAL,GAAiB,IAAjB;ACZnD,AIMT,AHfA,AHYK,AIHA,AHaG,AFRA,IOCH,AHfC,CDJ8D,AHkB5D,CGHA,CHGA,EOCE,CHfE,AFsBA,AFRJ,CEQK,CKPA,ALOC,CKPd,AHfyC,EJc5B,CEQD,KEtBqC,AFsB3B,CEtB4B,AJc1C,MAAY,IAAZ,CEQI,EEtB6B,CAAuB,AJc5C,CEQkB,CAAC,AFRnB,CEQoB,GAAF,CFRlB,IEQ4B,CEtBP,AJcrB,CIdpB,AJcQ,EIZR,CJYoB,KAAA,CAAZ,CEQA,EAAsD,AFR1C,EAAA,CAAE,EEQ4C,CAAC,MFR/C,CAAY,CAAZ,EEQ0C,AFR3B,CAAf,EEQ4D,AFR1C,IEQwB,CFRnB,MAAL,CAAY,KAA9B,EAAqC,KAAK,MAAL,CAAY,MAAjD,CAAZ;AESH,AFRA,GAFD,EEOA;AKHJ,AHdO,AHWH,AIFA,EJEA,AIFA,EDTS,EHWT,CAAA,CIFA,CEKK,AFLL,OJEA,CGXsB,AHWtB,GMGJ,AHd6B,CGcR,CHdd,CCSH,CAAI,CEKR,EAAqC,EFL7B,CAAA,GJEJ,GAAA,GIFA,EAAI,OJEJ,AIFA,EAAS;AFAL,AIMJ,ANHI,ACUJ,AFRA,EOCA,APDA,IOCI,CAAC,CJNG,CFGC,AIHT,AHaA,GCbY,AHKZ,CGLa,AHKb,CCFI,CMGJ,ANHe,CEHP,AIMM,ANHV,CEHa,CAAT,CFGW,CAAC,ACUpB,CCbqB,CAAjB,AHKJ,CEQc,AFRd,CGLwB,AEAxB,CJGyB,GMGzB,ENHoB,CAAW,CAA3B,CCUW,CAAD,EAAiB,EFR/B,GAAA,UAAgB,aAAhB,EAAyD;AGJjD,AGRN,ACcF,AHfG,AHYF,AIHG,AHaA,AFTJ,EOEA,CNLA,CGVS,EDSD,EHIR,CMZY,CHQA,AIMJ,ALOA,CCbK,ADaJ,CAAC,CKPC,AFNA,ALIX,CIbmB,EFsBX,AFTR,CIbsB,CGetB,AFNgB,CDTb,CJaH,CMZE,AJqBgB,GIrBM,GHQhB,CEAJ,IHaI,IAAyB,CAAC,CAAC,GAAF,KAAU,WAAvC,EAAoD,KAAI,CAAC,SAAL,GAAiB,KAAjB;ACZnD,AGRL,ACcH,AFNI,AHaG,KGfK,ICNF,CJqBC,CAAC,CAAC,IAAF,KAAU,CIrBL,MAAN,CAAa,IJqBZ,IAA0B,CAAC,CIrBd,AJqBe,GIrBhB,AJqBc,EIrBR,GJqBkB,IIrBxB,EAAe,CAAf,EAAgB,GJqBhC,EAAsD,KAAI,CAAC,UAAL,GAAkB,KAAlB;ACZzD,AGRG,AFFD,AHaH,ACUC,EDVD,CEtBA,CCSS,CFoBT,CDPA,CAAA,CKXU,CDSV,ECTa,GAAG,AFFG,EHanB,CGbsB,AHatB,CKXoB,CAAC,AFFlB,GCWO,ECTM,CAAW,CAAC,CAAC,ADS7B,EAAuB,CCTS,CAAL,ELW3B,EKXqC,CLWrC,YAAA,IKXgB,CAAZ;AACA,ACcR,ANHQ,AIFA,QCTM,CCcL,ANHI,EKXI,ADSJ,GCTO,ALWZ,CKXa,ALWF,CAAX,EKXgB,CCcxB,ANHuB,CMGH,ANHI,CIFhB,GEKR,AFL0B,CJEG,CMGO,GFL5B,CJEgB,CAAW,CAA3B,GKXA;AHSJ,AGPI,ACaJ,AHjBG,AHcF,AIFA,AHVG,AFUA,EGDJ,AIMA,CNLA,CGZS,CCMA,ALML,COKA,CAAC,APLD,CMRM,CAAC,AJFF,CFUL,CGDJ,CAAA,AGPc,GCad,ALfI,AFUK,COKK,CHjBQ,CFEJ,EEFO,AJYrB,CGDJ,ACXG,CDWH,EDTI,EFUU,COKd,GPLI,IAAU,CMRgB,CNQhB,EMRmB,CHOjC,EHCc,CGDd,AGPqC,INQvB,CAAV,GAAU,EGDI,GHCJ,CGDd,AHCI,EGD0B,CHChB,EAAA,CAAE,CMRmC,CHOnD,EAA6C,YHC/B,CAAmB,IMRA,CAA7B,ENQU,EAA4B,YAAA;AGAtC,AGPA,ACaJ,ALfI,AFS4C,EOMhD,MJNQ,AGPE,CAAC,AJFF,CKeD,EDbM,CCaH,APNqC,EET5C,ECSa,CIMjB,ALfkB,ECSE,CENX,GHHL,CCSA,CHAyD,CAAC,KAAD,CAAb,EMPlB,GAAG,IAAI,sBAAe,oBAAnB,CAA7B;AHSA,AGPA,ACYP,AHlBM,AHeH,ACZI,AFQ+D,ECInE,EEFI,ACbK,CJWK,CCId,ADJI,CCIJ,CKTO,CJHE,CCUC,CAAC,IGPG,AFNM,CHepB,ACZI,CDYJ,CEFI,ACbmB,CDaJ,ADVA,CIGA,CAAf,EAAmB,CFNM,CHe7B,CCZI,CEFJ,CHcA,CEFoB,CGPU,CFL1B,CAAC,CEKkB,CHOJ,EAAQ,CAAR,ACZnB,CAAW,CDYiB,ACZhB,CHcZ,KGdkB,CAAC,KAAP,GAAe,aAAa,GAAG,CAAhC,IAAqC,UAAhD,IAA8D,aADjC,GAE7B,GAFG;ADcK,AGNJ,ALQA,AIXK,AHDL,AFQH,GKPD,ALKA,MCMS,ACZA,CCUG,CGNR,MLQA,CAAc,ACZd,CCUiB,AFEjB,CEFkB,CDVD,EDYE,EKRnB,CACO,ELOiB,CKRxB,CJJA,CIKU,CACN,CLMe,CAAW,CAA9B,CEFQ,AGJA,CHI2B,IAA3B,EAAiC,KAAjC,AGJJ,CHIA,AGHI,EHGyC,gBGJ7C,EAEI,mBAFJ,EAGI;AHEA,AGFC,ACOjB,AHjBO,AHcC,AIJJ,AHRI,EGQJ,EDVS,EEUI,CAAC,CHEF,AEFZ,CCAc,ACOT,ANHI,AIJT,AHRS,CIQG,EHEI,CAAC,GCZI,CGiBzB,ANHQ,CMIJ,ANJkB,ACZd,CEFoB,AHcpB,ECZiB,CKezB,CNH2B,AIJvB,CESA,AFTI,CDV0B,CFE1B,EEDJ,AHa4B,CEFhB,AEFR,CEOR,AFPQ,EEUJ,AHnBI,CAAC,AHakB,CAAW,CAA9B,GMGR,AHhBI,CAAW,ACSX,CEWA,AHpBY,CCSR,GEOR,EAKI,AHrBkB,CAAC,ECSnB,EAAU,EDTE,EGgBhB,CHhBgC,CGqBR,YHrBqB,GAAG,CAAjC,IAAsC,UAAjD,IAA+D,aADjC,GAE9B,EAFG;AEUa,ACchB,ANTC,ACZG,AFQJ,EOaA,APbA,CCCA,GKFgB,ACcZ,CDda,ACcZ,EDdY,ADAjB,AHPS,GKqBT,APbA,CAAA,MERI,GAAkB,AFQtB,CAAA,CKDA,GHPI,KFQJ,GAAA,UAAU,KAAV,EAAuB;AGGX,AGJA,ACeZ,AHtBG,ACQC,AHPA,AFQA,EOaJ,EHtBS,CEID,CCkBJ,CDdQ,ACcP,CPbG,CERC,GCUO,CEHL,ALCE,EERT,CEDiB,AFCL,CCUK,AIWrB,CJXsB,AIWN,AFdA,CDRQ,AFCpB,GEDD,AFCmB,ECUN,AIWhB,CPbI,EMDqB,AJPrB,AFQuB,EGEM,AEH7B,CFGQ,EAAwB,AHFJ,EMDpB,CAJJ,EAKI,ONAe,CAAkB,SAAlB,GMAF,ANAgC,KAAK,CAAC,CMAnD,CALJ,CADM,CADV,CAAA,GNOqD,EAA9B;AGGX,AGAf,ACWD,ANTA,AILC,AHNG,AFOH,EOaD,ANTA,CKrBO,ANeP,CELI,CISD,ADLO,CEgBN,CD9BG,AC8BF,CD9BL,ALqBA,CAAA,CEFgB,EDTJ,CAAC,GCSS,CAAC,AIWvB,CAAgB,KJXA,AFEhB,CEF8B,AIW9B,ANTI,CEFY,EAAiB,CAAjB,AFEZ,CAAA,ACXA,CAA0B,QDW9B,CCXI,CDWA,CCXqC,KAAK,CDW9C,EAAS,UCXL;ACUS,AGAhB,ACWG,AHvBG,AFGC,EKoBJ,EHvBS,AFGL,EKoBA,CAAC,EJbO,AFGZ,AIHA,GHPY,CAAC,ECSM,EIWnB,AHvBsB,CGuBN,EHvBS,EGuBzB,AHvBG,ACUQ,EJGX,GIHA,EAAwB,AHPpB,CAA0B,OAA1B,EAAmC,KAAK,WAAxC;ACUY,AIYhB,ANXI,AIHA,AHPH,AFOD,EOcA,APdA,IOcI,CAAC,GJZW,CEFP,CLAT,CCGW,ADHX,EGEqB,AIYrB,CJZsB,EFCN,IEDA,AEFZ,ALAJ,CAAA,EKAuB,CFES,AFC5B,CEDY,GEFZ,CLAJ,GAAA,UAAS,IAAT,EAAqB;AGGR,ACbV,AHcF,AIHA,ALAG,IIXK,CHYA,AIPC,GLMF,KAAK,IIXS,AJWlB,EAAe,CIXM,GAAtB,CJWqB,IAAL,CAAU,SAAV,GAAsB,IAAtB;AOenB,ALXA,AFHC,EEGD,CFLA,GOiBK,ELZL,CAAA,GKYW,CAAC,KLZZ,CAAA,EDHS,AIPC,IEsBL,IAAuB,ALZ5B,GAAA,GKYkC,CAAC,GAAP,CAAW,CAAX,GAAe,ALZ3C,CKYI,IACC,MAAM,CAAC,aAAP,IAAwB,MAAM,CAAC,GAAP,CAAW,CAAX,GAAe,IAAI,CAAC,MAAL,CAAY,KAAZ,GAAoB,MAAM,CAAC,KAFvE,EAGE;AJfU,AIgBR,AH7BD,AFeC,IKcA,AH7BK,IDaG,ADEJ,EKcE,CAAC,ELdE,GEfQ,CDaA,ECbG,CDaA,CIgBpB,AH7BD,CFeC,ECFQ,ADEY,KAAK,GAAL,CAAS,CAAT,IAAc,KAAK,MAAnB;ACDf,AIgBR,ANnBQ,AIPC,AHYN,AFHJ,EAAA,CCFA,AIPA,KHYQ,IFHR,CEGa,AFHb,SAAA,CEGI,AFHJ,EEGyB,KAAK,GAAL,AFHzB,CEGkC,CAAT,CFHzB,GEGuC,KAAK,EFHjC,IEGc,GFHzB,EAAyC;AGEpC,ACdF,AHcH,AIHA,AHKC,EDFD,AIHA,CHEA,CEbS,CDGL,GFWJ,AIHA,CJGA,AIHA,KDXmB,GAAG,CAAnB,KHcH,AIHA,CJGI,AIHA,IJGA,CAAA,AIHA,CAAA,QJGJ,CIHA,CJGI,CIHA,KAAJ,EJGA,AIHO,EJGG;AEEN,AIeJ,EAAA,ONjBA,AIHA,EFKW,AIeF,CAAC,QJfN,IFFJ,AIHA,MEoBA,CAA6B,IAA7B,EAAmC,MAAnC,EAA2C,IAA3C;AJdC,AIgBD,AHhCG,AHcC,AIHA,AHQJ,AFPI,EEOJ,CCpBA,CCCS,EGgCH,ELbN,AFPQ,CEOR,AFPS,IIZS,AHcP,AIHA,GDXU,AJYjB,EIZD,AHca,AIHA,ALCE,IOoBI,CLbtB,CAAI,CKaqB,CNlBrB,AIHA,IHQA,CAAA,GKa8B,CAAC,KLbnC,EAAI,QAAJ,EKayB,ALbf,CKa2C,IAA5B,EAAkC,MAAlC,CAAzB;ANjBC,AIHA,ALEG,KCDM,AIHH,ALIH,EAAA,EEKJ,CFLI,KAAK,OAAL,EEKJ,IFLgB,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,SAAF,CACR,OAAO,CAAC,KADA,EAER,OAAO,CAAC,GAAR,CAAY,CAFJ,EAGR,OAAO,CAAC,GAAR,CAAY,CAHJ,EAIR,OAAO,CAAC,KAJA,EAKR,OAAO,CAAC,MALA,CAAZ;AGIW,AIgBf,AHjCG,AFmBC,AFCH,EGHc,CHPf,CIVS,EGiCL,GFpBJ,EFIe,CAAA,CDEJ,EEnBS,GAAG,AFmBP,GEnBb,AHYO,CMqBV,AFpBQ,EEoBc,CLdlB,EGNJ,CFIe,CEJM,EFIrB,UAAgC,IAAhC,EAA4C,KAA5C,EAAwD;AACpD,AIgBA,AFpBA,AHMH,IKcG,CLhBM,GCCF,CIeC,EFpBA,CFKG,CAAC,AIeA,CAAT,EJfI,CAAS,CAAT,CELJ,EFKiB,CELD,IFKM,CAAC,AELvB,GFKiB,CAAU,CAAV,GAAc,KAAK,CAAC,KAAjC,IACA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,KAAlB,GAAyB,KAAK,CAAC,GAAN,CAAU,CADnC,IAEA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,KAAK,CAAC,GAAN,CAAU,CAAV,GAAc,KAAK,CAAC,MAFjC,IAGA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,MAAlB,GAA2B,KAAK,CAAC,GAAN,CAAU,CAJzC,EAKE;AACE,AIWJ,AHlCD,AHWO,AIGT,ALOD,EAAA,CCVA,CMuBI,AHlCK,CCQF,GE0BC,CAAC,GPbT,CGEe,AHFf,EIrBoB,EDuBZ,CIWJ,AHlCmB,CGkCJ,EHlChB,AFiBO,CFIV,CAAA,COaI,SPbJ,GAAA,UAAW,MAAX,EAA0B;AGGrB,AIWJ,ANpBD,ADMA,ECNA,MAAA,ADMA,CCNA,IDMA,GAAA,IAAA,CKbO,EJOP,CAAI,IAAA,CAAA,SAAJ,EAAI,KAAJ,EAAO;AGbJ,AFeO,GAAV,CEfS,KHaT,OGbqB,GAA8B,KHanD;AEWI,AIWJ,AHlCF,AHaM,AIRG,AHaP,AFCI,EEDJ,CGbA,CLcI,CInBH,CGkCG,ELhBJ,CAAA,CKgBQ,APfE,CGIC,AIWF,APfE,ECNA,CMqBP,CAAS,CJXT,AIWA,ENrBY,ADMZ,COea,APfE,GIpBgC,CGmC9B,ALhBrB,CKgBsB,ALhBlB,EDLA,GDMe,COeF,ALhBb,CKgByB,ALhBzB,GFCe,EAAK,COexB,EAAqC,CLhBrC,EAAI,KKgByC,ELhB7C,CKgBgD,CLhBvC,GKgB4B;AJVpC,AIYD,AHnCF,AHaG,AIDD,ALM4B,EKN5B,CFAe,ECZd,AHWM,CMwBH,EFvBJ,CAAA,AHKA,GKkBU,CAAC,APjBiB,KAAI,COiB5B,APjB6B,IKNjC,CEuBsB,AHrC6B,ACc/C,AHKJ,CKkBA,EAAyB,EFvBrB,ALMwB,CKNxB,ALMwC,IOiBZ,CPjBJ,CAAA,GKN5B,EAAI,GEuBsC,CAAC,IAAD,AFvB1C,CEuByB,CFvBf;AEwBV,AHnCF,AFiBM,AFA8C,KIjBjD,AJiBG,COkBA,GFxBJ,IHMW,CKkBX,EAAc,ELlBE,GDPT,EMyBc,CFxBrB,AHMI,CEpB+C,SGsCnB,CAAC,IAAD,CAAlB;AJXlB,AIYI,AHnCF,ACWM,AHMH,AFAA,EOkBD,CPpBA,EIfC,AFeQ,ICQb,IEZe,KFYf,AEZoB,KEwBK,AHvC8B,CGuC7B,KFxBlB,OEwBkB;AJlE1B,AIkEgC,AHlC9B,AHQS,AIGN,CF3CL,EAAA,AFwCI,EGRC,ACSS,MEyBkB,QAAQ,CAAC,CLpB5B,GKoB2B,EAAO,MAAP,EAAe,MAAf,EAAuB,IAAvB,EAA6B,SAA7B,CAAR;AAA+C,AHvCxB,AHiBnD,ADOJ,CIxBO,CHiBH,CMsBqB,CAArB,INtBA,CAAA,AICA,ALMJ,UAAA,GKNe,CJDX,CAAI,GICJ,CJDI,CAAA,AICoB,SJDxB,EAAI,OAAJ,EAAS;AMuBZ,AFrBO,AHAK,AF5Cb,CAAA,EE4CI,AF5CJ,MC0CI,EIES,WAAL,EJFJ,CIEuB,KAAnB;ADXD,AHUC,AIEH,AHGD,EAAA,EEfS,CCMC,GHSV,CAAA,IDLW,GGVU,EHUL,CGVmC,IFenD,CAAI,GDLA,GCKA,CAAA,SAAJ,EAAI,KAAJ,EAAO;AKmBX,AHjCE,AHUG,KGVA,AHQQ,CGT0C,GGkC9C,ALnBL,SKmBJ,CAAmB,EF5BL,EE4Bd,CLnBI,CKmB+B;AAC/B,AHjCF,AFcM,EKmBJ,GHjCC,CAFkD,CGmC9C,GAAG,CAAR,ELnBW,KAAK,GDPP,MCOL;AKoBJ,AHjCF,ACGY,AHWT,EKmBD,CF9BA,EDHC,AFYM,CKqBH,AHpC+C,CGoC9C,QAAL,CAAc,EAAd;AACA,AHjCF,AHKW,AIMT,EEsBA,AFtBA,CJNA,EGLC,CGiCG,AHrC+C,CGqC9C,CFtBL,CAAA,OEsBA,CAAe,CAAf,GLtBO,EGAP,CAAI,KAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;AEwBT,AHlCF,AHQF,KGRK,CGkCK,AHvC6C,CAKhD,EHQP,AIEI,IJFJ,EM0BmB,GAAG,IAAI,EFxBtB,kBEwBkB,EAAlB;AACA,AN5EJ,AIoDQ,AHDG,CDnDX,EAAA,ACmDI,GKyBM,MAAM,CFxBD,EEwBI,GFxBC,UAAZ,eEwBJ;AAEA,AH1CmD,ACiBlD,AHED,CEnBG,CFmBH,CEXJ,ECOa,CE2BH,ELvBN,CAAA,CKuBU,GAAG,IAAI,MLvBjB,CAAI,GKuBS,CACT,ELxBA,CAAA,SAAJ,EAAI,EKuBS,EAET,GLzBJ,EAAS;AKyBJ,IAAA,CAAC,EAAE,EFzBR,AHAA,aGAU,EHAV,CKyBI,EFzBJ,EAAiC;AEyBZ,AFxBjB,AHAA,IKwBiB,CAAC,EAAE,IFxBf,EHAE,KAAK,GGAZ,GAAkB,AHAlB,KGAA;AEwBA,AHnCD,ACYF,AHAA,GKqBY,CHjCJ,CGoCL,AF9BK,AHIA,IEVK,GAAG,CACnB,CADmB,EAChB,CADgB,EACb,CADa,EGiCJ,AHhCN,CADU,CGqCb,CHpCM,CADO,EACJ,CADI,EACD,CADC,EACE,CADF,EGiCJ,AHhCS,CGgCtB,AHjCiB,EACQ,CADR,EAEnB,CAFmB,EAEhB,CAFgB,EAEb,CAFa,EAEV,CAFU,EAEP,CAFO,EAEJ,CAFI,EAED,CAFC,EAEE,CAFF,EAEK,CAFL,EAEQ,CAFR,EAGnB,CAHmB,EAGhB,CAHgB,EAGb,CAHa,EAGV,CAHU,EAGP,CAHO,EAGJ,CAHI,EAGD,CAHC,EAGE,CAHF,EAGK,CAHL,EAGQ,CAHR,EAInB,CAJmB,EAIhB,CAJgB,EAIb,CAJa,EAIV,CAJU,EAIP,CAJO,EAIJ,CAJI,EAID,CAJC,EAIE,CAJF,EAIK,CAJL,EAIQ,CAJR,EAKnB,CALmB,EAKhB,CALgB,EAKb,CALa,EAKV,CALU,EAKP,CALO,EAKJ,CALI,EAKD,CALC,EAKE,CALF,EAKK,CALL,EAKQ,CALR,EAMnB,CANmB,EAMhB,CANgB,EAMb,CANa,EAMV,CANU,EAMP,CANO,EAMJ,CANI,EAMD,CANC,EAME,CANF,EAMK,CANL,EAMQ,CANR,CAAd;AGwCH,MAAM,MAAM,GAAG,IAAI,EFlCV,AHIA,YK8BM,CACX,mBADW,EAEX,mBAFW,EAGX,oBAHW,EAIX;AACI,IAAA,CAAC,EAAE,oBADP;AAEI,AFxCC,AHIA,GGJT,AHIA,CKoCQ,CAAC,EAAE,IAAI,CAAC,MAAL,CAAY,MAAZ,GAAqB,oBAArB,GAAqC;AAF5C,AF/BR,AHCI,EAAA,CK0Be,EAQX,GLlCJ,CGDJ,AHCI,KGDJ,ME2BmB,CAAf,EL1BA,CAAI,MAAA,CAAA,SAAJ,EAAI,cAAJ,EAAgB;AKsChB,AFjGJ,CAAA,CEiGI,CFjGJ,MH2DI,CKsCQ,CAAC,IAAD,EAAO,MAAP,CLtCR,CKsCuB,MAAf,EAAuB,IAAvB,EAA6B,SAA7B,CAAR;AACH,ALtCO,aAAO,KAAK,SAAZ;AACH,KAFe;AKyCpB,IAAM,IAAI,GAAG,IAAI,MLzCG,gBKyCP,CAAe,YAAf,CAAb;AACA,IAAI,CAAC,eAAL,CAAqB,SAArB;AL1CoB,GAAhB;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,MAAA,CAAA,SAAJ,EAAI,eAAJ,EAAiB;SAAjB,eAAA;AACI,aAAO,KAAK,UAAZ;AACH,KAFgB;qBAAA;;AAAA,GAAjB;AAGJ,SAAA,MAAA;AAlEA,CAAA,EAAA","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["import {Ball} from \"~/sprites/Ball\";\nimport {Brick} from \"~/sprites/Brick\";\nimport {Paddle} from \"~/sprites/Paddle\";\n\n\nexport class CanvasView {\n     canvas: HTMLCanvasElement;\n     private context: CanvasRenderingContext2D | null;\n     private scoreDisplay: HTMLObjectElement | null;\n     private start: HTMLObjectElement | null;\n     private info: HTMLObjectElement | null;\n\n\n    constructor(canvasName: string) {\n        this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\n        this.context = this.canvas.getContext(\"2d\");\n        this.scoreDisplay = document.querySelector(\"#score\");\n        this.start = document.querySelector(\"#start\");\n        this.info = document.querySelector(\"#info\");\n    }\n\n    clear(): void {\n        this.context?.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    initStartButton(startFunction: (view: CanvasView) => void): void {\n        this.start?.addEventListener(\"click\", () => startFunction(this))\n    }\n\n    drawScore(score: number): void {\n        if (this.scoreDisplay) this.scoreDisplay.innerHTML = score.toString();\n    }\n\n    drawInfo(text: string): void {\n        if (this.info) this.info.innerHTML = text;\n    }\n\n    drawSprite(element: Brick | Paddle | Ball): void {\n        if (!element) return;\n\n        this.context?.drawImage(\n            element.image,\n            element.pos.x,\n            element.pos.y,\n            element.width,\n            element.height\n        )\n    }\n\n    drawBricks(bricks: Brick[]): void {\n        bricks.forEach(brick => this.drawSprite(brick))\n    }\n\n\n}","import {Vector} from \"~/types\";\n\nexport class Ball {\n\n    private speed: Vector;\n    private ballImage: HTMLImageElement = new Image();\n\n    constructor(\n        private ballSize: number,\n        private position: Vector,\n        speed: number,\n        image: string\n    ) {\n        this.ballSize = ballSize;\n        this.position = position;\n        this.speed = {\n            x: speed,\n            y: -speed\n        };\n        this.ballImage.src = image;\n    }\n\n    changeYDirection(): void {\n        this.speed.y = -this.speed.y;\n    }\n\n    changeXDirection(): void {\n        this.speed.x = -this.speed.x;\n    }\n\n    moveBall(): void {\n        this.position.x += this.speed.x;\n        this.position.y += this.speed.y;\n    }\n\n    get width(): number {\n        return this.ballSize\n    }\n\n    get height(): number {\n        return this.ballSize\n    }\n\n    get pos(): Vector {\n        return this.position\n    }\n\n    get image(): HTMLImageElement {\n        return this.ballImage;\n    }\n\n}","import {Vector} from \"~/types\";\n\nexport class Paddle {\n\n    private _image: HTMLImageElement = new Image();\n    private _moveLeft: boolean;\n    private _moveRight: boolean;\n\n\n    constructor(\n        private _speed: number,\n        private _width: number,\n        private _height: number,\n        private _position: Vector,\n        image: string\n    ) {\n        this._speed = _speed;\n        this._width = _width;\n        this._height = _height;\n        this._position = _position;\n        this._moveLeft = false;\n        this._moveRight = false;\n        this._image.src = image;\n\n        document.addEventListener(\"keydown\", this.handleKeyDown);\n        document.addEventListener(\"keyup\", this.handleKeyUp);\n    }\n\n    handleKeyDown = (e: KeyboardEvent) : void => {\n        if (e.code=== \"ArrowLeft\" || e.key === \"ArrowLeft\") this._moveLeft = true;\n        if (e.code=== \"ArrowRight\" || e.key === \"ArrowRight\") this._moveRight = true;\n    }\n\n    handleKeyUp = (e: KeyboardEvent) : void => {\n        if (e.code=== \"ArrowLeft\" || e.key === \"ArrowLeft\") this._moveLeft = false;\n        if (e.code=== \"ArrowRight\" || e.key === \"ArrowRight\") this._moveRight = false;\n    }\n\n    movePaddle(): void {\n        if (this._moveLeft) this.pos.x -= this._speed;\n        if (this._moveRight) this.pos.x += this._speed;\n    }\n\n\n\n    get height(): number {\n        return this._height;\n    }\n\n    get width():number {\n        return this._width;\n    }\n\n    get pos(): Vector {\n        return this._position;\n    }\n\n    get image(): HTMLImageElement {\n        return this._image\n    }\n\n    get isMovingLeft(): boolean {\n        return this._moveLeft;\n    }\n\n    get isMovingRight(): boolean {\n        return this._moveRight;\n    }\n}","import {Brick, Paddle, Ball} from \"~/sprites\";\nimport {CanvasView} from \"~/view/CanvasView\";\n\nexport class Collision {\n    checkBallCollision(ball: Ball, padddle: Paddle, view: CanvasView) {\n        //Collision with paddle\n        if (\n            ball.pos.x + ball.width > padddle.pos.x &&\n            ball.pos.x < padddle.pos.x + padddle.width &&\n            ball.pos.y + ball.height === padddle.pos.y\n        ) {\n            ball.changeYDirection();\n        }\n\n        //Collision with Walls\n        if (ball.pos.x > view.canvas.width - ball.width || ball.pos.x < 0) {\n            ball.changeXDirection();\n        }\n\n        //Collision with ceil\n        if (ball.pos.y < 0) {\n            ball.changeYDirection();\n        }\n    }\n\n    isCollidingBricks(ball: Ball, bricks: Brick[]): boolean {\n        let colliding = false;\n\n        bricks.forEach((brick, i) => {\n            if (Collision.isCollidingBrick(ball, brick)) {\n                ball.changeYDirection();\n\n                if (brick.energy === 1) {\n                    bricks.splice(i, 1);\n                } else {\n                    brick.energy -= 1;\n                }\n                colliding = true;\n            }\n        });\n\n        return colliding;\n    }\n\n    private static isCollidingBrick(ball: Ball, brick: Brick): boolean {\n        if (\n            ball.pos.x < brick.pos.x + brick.width &&\n            ball.pos.x + ball.width> brick.pos.x &&\n            ball.pos.y < brick.pos.y + brick.height &&\n            ball.pos.y + ball.height > brick.pos.y\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n}","import RED_BRICK_IMAGE from './images/brick-red.png';\nimport BLUE_BRICK_IMAGE from './images/brick-blue.png';\nimport GREEN_BRICK_IMAGE from './images/brick-green.png';\nimport YELLOW_BRICK_IMAGE from './images/brick-yellow.png';\nimport PURPLE_BRICK_IMAGE from './images/brick-purple.png';\n\n// Grab the canvas element for calculating the brick width\n// depending on canvas width\nconst canvas: HTMLCanvasElement | null = document.querySelector('#playField');\n\n// Constants\nexport const STAGE_PADDING = 10;\nexport const STAGE_ROWS = 20;\nexport const STAGE_COLS = 10;\nexport const BRICK_PADDING = 5;\nexport const BRICK_WIDTH = canvas\n  ? Math.floor((canvas.width - STAGE_PADDING * 2) / STAGE_COLS) - BRICK_PADDING\n  : 100;\nexport const BRICK_HEIGHT = canvas\n  ? Math.floor((canvas.height - STAGE_PADDING * 2) / STAGE_ROWS) - BRICK_PADDING\n  : 30;\nexport const PADDLE_WIDTH = 150;\nexport const PADDLE_HEIGHT = 25;\nexport const PADDLE_STARTX = 450;\nexport const PADDLE_SPEED = 10;\nexport const BALL_SPEED = 5;\nexport const BALL_SIZE = 20;\nexport const BALL_STARTX = 500;\nexport const BALL_STARTY = 400;\n\nexport const BRICK_IMAGES: { [key: number]: string } = {\n  1: RED_BRICK_IMAGE,\n  2: GREEN_BRICK_IMAGE,\n  3: YELLOW_BRICK_IMAGE,\n  4: BLUE_BRICK_IMAGE,\n  5: PURPLE_BRICK_IMAGE\n};\n\nexport const BRICK_ENERGY: { [key: number]: number } = {\n  1: 1, // Red brick\n  2: 1, // Green brick\n  3: 2, // Yellow brick\n  4: 2, // Blue brick\n  5: 3 // Purple brick\n};\n\n// prettier-ignore\nexport const LEVEL = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n  0, 2, 2, 2, 2, 2, 2, 2, 2, 0,\n  0, 3, 3, 3, 3, 3, 3, 3, 3, 0,\n  0, 0, 4, 4, 4, 4, 4, 4, 0, 0, \n  0, 0, 5, 5, 0, 0, 5, 5, 0, 0,\n];\n","import {Vector} from \"~/types\";\n\nexport class Brick {\n    private brickImage: HTMLImageElement = new Image();\n\n    constructor(\n        private brickWidth: number,\n        private brickHeight: number,\n        private position: Vector,\n        private brickEnergy: number,\n        image: string\n    ) {\n        this.brickWidth = brickWidth;\n        this.brickHeight = brickHeight;\n        this.position = position;\n        this.brickEnergy = brickEnergy;\n        this.brickImage.src = image\n    }\n\n\n    get width(): number {\n        return this.brickWidth;\n    }\n\n    set width(value: number) {\n        this.brickWidth = value;\n    }\n\n    get height(): number {\n        return this.brickHeight;\n    }\n\n    set height(value: number) {\n        this.brickHeight = value;\n    }\n\n    get pos(): Vector {\n        return this.position;\n    }\n\n    set pos(value: Vector) {\n        this.position = value;\n    }\n\n    get energy(): number {\n        return this.brickEnergy;\n    }\n\n    set energy(value: number) {\n        this.brickEnergy = value;\n    }\n\n\n    get image(): HTMLImageElement {\n        return this.brickImage;\n    }\n\n    set image(value: HTMLImageElement) {\n        this.brickImage = value;\n    }\n}","import {Brick} from \"~/sprites/Brick\";\n\nimport {\n    BRICK_IMAGES,\n    LEVEL,\n    STAGE_COLS,\n    STAGE_PADDING,\n    BRICK_WIDTH,\n    BRICK_HEIGHT,\n    BRICK_ENERGY,\n    BRICK_PADDING\n} from \"~/setup\";\n\nexport function createBricks(): Brick[] {\n    return LEVEL.reduce((ack, element, i) => {\n        const row = Math.floor((i + 1) / STAGE_COLS);\n        const col = i % STAGE_COLS;\n\n        const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\n        const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\n\n        if(element === 0 ) return ack;\n\n        return [\n            ...ack,\n            new Brick(\n                BRICK_WIDTH,\n                BRICK_HEIGHT,\n                {x, y},\n                BRICK_ENERGY[element],\n                BRICK_IMAGES[element]\n            )\n        ]\n    }, [] as Brick[]);\n}","import { CanvasView } from \"./view/CanvasView\";\nimport { Ball } from \"~/sprites/Ball\";\nimport { Brick } from \"~/sprites/Brick\";\nimport { Paddle } from \"~/sprites/Paddle\";\nimport {Collision} from \"~/Collision\";\n\nimport PADDLE_IMAGE from \"./images/paddle.png\"\nimport BALL_IMAGE from \"./images/ball.png\"\n\nimport {\n    PADDLE_SPEED,\n    PADDLE_HEIGHT,\n    PADDLE_WIDTH,\n    PADDLE_STARTX,\n    BALL_SPEED,\n    BALL_SIZE,\n    BALL_STARTX,\n    BALL_STARTY\n} from \"~/setup\";\n\nimport {createBricks} from \"~/helpers\";\n\nlet gameOver = false;\nlet  score = 0;\n\nfunction setGameOver(view: CanvasView) {\n    view.drawInfo(\"Game Over!\");\n    gameOver = false\n}\n\nfunction setGameWin(view: CanvasView) {\n    view.drawInfo(\"Game Won!\");\n    gameOver = false\n}\n\nfunction gameLoop (\n    view: CanvasView,\n    bricks: Brick[],\n    paddle: Paddle,\n    ball: Ball,\n    collision: Collision\n) {\n    view.clear();\n    view.drawBricks(bricks);\n    view.drawSprite(paddle)\n    view.drawSprite(ball);\n\n    ball.moveBall();\n\n    if (\n        (paddle.isMovingLeft && paddle.pos.x > 0) ||\n        (paddle.isMovingRight && paddle.pos.x < view.canvas.width - paddle.width)\n    ) {\n        paddle.movePaddle();\n    }\n\n    collision.checkBallCollision(ball, paddle, view);\n\n    const isCollidingBrick = collision.isCollidingBricks(ball, bricks);\n\n    if (isCollidingBrick) {\n        score += 1;\n        view.drawScore(score);\n    }\n\n    if (ball.pos.y > view.canvas.height) gameOver = true;\n\n    if (bricks.length === 0) return setGameWin(view);\n    if (gameOver) return setGameOver(view);\n    requestAnimationFrame(() => gameLoop(view, bricks, paddle, ball, collision))\n}\n\nfunction startGame(view: CanvasView) {\n    score = 0;\n    view.drawInfo(\"\");\n    view.drawScore(0);\n\n    const collision = new Collision();\n    const bricks = createBricks();\n\n    const ball = new Ball(\n        BALL_SIZE,\n        {x: BALL_STARTX, y: BALL_STARTY},\n        BALL_SPEED,\n        BALL_IMAGE\n    )\n\n    const paddle = new Paddle(\n        PADDLE_SPEED,\n        PADDLE_WIDTH,\n        PADDLE_HEIGHT,\n        {\n            x: PADDLE_STARTX,\n            y: view.canvas.height - PADDLE_HEIGHT - 5\n        },\n        PADDLE_IMAGE\n    )\n\n\n    gameLoop(view, bricks, paddle, ball, collision)\n}\n\nconst view = new CanvasView(\"#playField\");\nview.initStartButton(startGame);\n"]}